name: Deploy to Droplet

on:
  push:
    branches:
      - main  # Trigger the workflow on changes to the `main` branch

jobs:
  deploy:
    name: Deploy to Digital Ocean
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up SSH access
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.VPS_IP}} >> ~/.ssh/known_hosts

      - name: Ensure repository folder and handle git setup
        run: |
          ssh -i ~/.ssh/id_rsa ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} <<EOF
          mkdir -p ~/mlh-corisync
          cd ~/mlh-corisync
          if [ ! -d .git ]; then
            git clone git@github.com:your-org-or-user/mlh-corisync.git .
          else
            git reset --hard
            git pull origin main
          fi
          EOF

      - name: Intiate Streaming
        run: |
          ssh -i ~/.ssh/id_rsa ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} <<EOF
          cd ~/mlh-corisync/services/streaming
          docker-compose down
          docker-compose up -d --build
          EOF

      - name: Initiate Connectors
        run: |
          ssh -i ~/.ssh/id_rsa ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} <<EOF
          cd ~/mlh-corisync/services/streaming/debezium
          python3 create_connectors.py
          EOF

      - name: Initiate Airflow
        run: |
          ssh -i ~/.ssh/id_rsa ${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}} <<EOF
          cd ~/mlh-corisync/services/batch/airflow
          docker-compose down
          docker-compose up -d --build
          EOF

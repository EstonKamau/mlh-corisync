version: '3.8'

services:
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
      - AIRFLOW__CELERY__WORKER_CONCURRENCY=16
    ports:
      - "8088:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - redis
      - statsd-exporter
      - postgres

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - airflow-webserver
      - redis
      - postgres
      - statsd-exporter

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8087:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_PREFIX=airflow
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - statsd-exporter

  redis:
    image: redis:latest
    restart: always

  postgres:
    image: postgres:13
    restart: always
    container_name: airflow-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5437:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data

  statsd-exporter:
    image: prom/statsd-exporter
    restart: always
    ports:
      - "9125:9125/udp"  # StatsD UDP port
      - "9102:9102"      # Prometheus scrape port
    command:
      - "--statsd.mapping-config=/tmp/statsd_mapping.yml"
    volumes:
      - ./statsd_mapping.yml:/tmp/statsd_mapping.yml

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9097:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3009:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.7.1
    ports:
      - "3101:3100"
    restart: always
    volumes:
      - ./loki_data:/loki
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command:
      - --config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.7.1
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - ./logs:/var/log/airflow  # Adjust the path if logs are stored elsewhere
    restart: always
    command:
      - --config.file=/etc/promtail/promtail-config.yaml

volumes:
  postgres-db: